import jwt from 'jsonwebtoken'; export function authRequired(req,res,next){ const header = req.headers.authorization || req.headers.Authorization; if(!header) return res.status(401).json({error:'Missing Authorization header'}); const token = header.replace('Bearer ',''); try{ const payload = jwt.verify(token, process.env.JWT_SECRET); req.user = { id: payload.id, email: payload.email, role: payload.role }; next(); }catch(e){ return res.status(401).json({ error: 'Invalid token' }); } } export function requireRole(role){ return (req,res,next)=>{ if(!req.user) return res.status(401).json({ error: 'Unauthorized' }); if(req.user.role !== role) return res.status(403).json({ error: 'Forbidden' }); next(); } }