import express from 'express'; import { authRequired, requireRole } from './middleware.js'; import { BlobSASPermissions, BlobServiceClient, SASProtocol, generateBlobSASQueryParameters } from '@azure/storage-blob'; export const storageRouter = express.Router(); storageRouter.post('/sign-upload', authRequired, requireRole('CREATOR'), async (req, res) => { const { blobName } = req.body; if (!blobName) return res.status(400).json({ error: 'blobName required' }); const accountName = process.env.AZURE_STORAGE_ACCOUNT; const containerName = process.env.AZURE_STORAGE_CONTAINER || 'videos'; const ttl = Number(process.env.AZURE_STORAGE_SAS_TTL_MINUTES || 15); const serviceClient = BlobServiceClient.fromConnectionString(process.env.AZURE_STORAGE_CONNECTION_STRING); const containerClient = serviceClient.getContainerClient(containerName); await containerClient.createIfNotExists(); const sharedKey = serviceClient.credential; const startsOn = new Date(Date.now()-60000); const expiresOn = new Date(Date.now()+ttl*60000); const sas = generateBlobSASQueryParameters({ containerName, blobName, permissions: BlobSASPermissions.parse('cw'), startsOn, expiresOn, protocol: SASProtocol.Https }, sharedKey).toString(); const url = `https://${accountName}.blob.core.windows.net/${containerName}/${encodeURIComponent(blobName)}?${sas}`; res.json({ uploadUrl: url, publicUrl: url.split('?')[0] }); });